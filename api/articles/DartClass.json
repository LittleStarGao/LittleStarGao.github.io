{"title":"DartClass","uid":"3b284d7eb9880174f64e9bf09d231aff","slug":"DartClass","date":"2021-06-01T01:28:38.000Z","updated":"2021-06-01T02:15:46.774Z","comments":true,"path":"api/articles/DartClass.json","keywords":null,"cover":null,"content":"<h4 id=\"Dart-类相关的使用\"><a href=\"#Dart-类相关的使用\" class=\"headerlink\" title=\"Dart 类相关的使用\"></a>Dart 类相关的使用</h4><h4 id=\"命名构造函数\"><a href=\"#命名构造函数\" class=\"headerlink\" title=\"命名构造函数\"></a>命名构造函数</h4><ul>\n<li>Point.fromJSON(Map json)</li>\n</ul>\n<pre class=\"line-numbers language-Dart\" data-language=\"Dart\"><code class=\"language-Dart\">class Point &#123;\n  num x;\n  num y;\n  \n  Point(this.x, this.y);\n  \n  &#x2F;&#x2F; 命名构造函数（命名构造函数）\n  Point.fromJSON(Map json) &#123;\n    x &#x3D; json[&#39;x&#39;];\n    y &#x3D; json[&#39;y&#39;];\n  &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h4 id=\"重定向构造函数\"><a href=\"#重定向构造函数\" class=\"headerlink\" title=\"重定向构造函数\"></a>重定向构造函数</h4><ul>\n<li>使用冒号<code>:</code>调用其他构造函数</li>\n</ul>\n<pre class=\"line-numbers language-Dart\" data-language=\"Dart\"><code class=\"language-Dart\">class Point &#123;\n  num x;\n  num y;\n  \n  Point(this.x, this.y);\n  \n  &#x2F;&#x2F; 命名构造函数（命名构造函数）\n  Point.fromJSON(Map json) &#123;\n    x &#x3D; json[&#39;x&#39;];\n    y &#x3D; json[&#39;y&#39;];\n  &#125;\n  \n  &#x2F;&#x2F; 重定向构造函数，使用冒号调用其他构造函数\n  Point.alongXAxis(num x) : this(x, 0); &#x2F;&#x2F; 重定向构造函数\n  \n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h4 id=\"超类构造函数\"><a href=\"#超类构造函数\" class=\"headerlink\" title=\"超类构造函数\"></a>超类构造函数</h4><ul>\n<li>超类</li>\n</ul>\n<pre class=\"line-numbers language-Dart\" data-language=\"Dart\"><code class=\"language-Dart\">class Parent &#123;\n  int x;\n  int y;\n\n  &#x2F;&#x2F;父类命名构造函数不会传递  \n  Parent.fromJson(x, y)\n      : x &#x3D; x, &#x2F;&#x2F; 赋值过程\n        y &#x3D; y &#123;\n    print(&#39;父类命名构造函数&#39;);\n  &#125;\n&#125;\n\n\nclass Child extends Parent &#123;\n  int x;\n  int y;\n  &#x2F;&#x2F;若超类没有默认构造函数， 需要手动调用超类其他构造函数\n  Child(x, y) : super.fromJson(x, y) &#123;\n    &#x2F;&#x2F;调用父类构造函数的参数无法访问 this\n    print(&#39;子类构造函数&#39;);\n  &#125;\n\n  &#x2F;&#x2F;在构造函数的初始化列表中使用super()，需要把它放到最后\n  Child.fromJson(x, y) \n    : x &#x3D; x, &#x2F;&#x2F; 赋值操作\n  \t\ty &#x3D; y, &#x2F;&#x2F; 赋值操作\n\t\t&#x2F;&#x2F; 调用命名构造函数\n\t   super.fromJson(x, y) &#123;\n    print(&#39;子类命名构造函数&#39;);\n  &#125;\n&#125;\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h4 id=\"常量构造函数\"><a href=\"#常量构造函数\" class=\"headerlink\" title=\"常量构造函数\"></a>常量构造函数</h4><ul>\n<li>通过const 关键字</li>\n</ul>\n<pre class=\"line-numbers language-Dart\" data-language=\"Dart\"><code class=\"language-Dart\">class Point2 &#123;\n  &#x2F;&#x2F;定义const构造函数要确保所有实例变量都是final\n  final num x;\n  final num y;\n  &#x2F;&#x2F; 初始化构造函数\n  static final Point2 origin &#x3D; const Point2(0, 0);\n\n  &#x2F;&#x2F;const关键字放在构造函数名称之前，且不能有函数体\n  const Point2(this.x, this.y);\n&#125;\n\nPoint2 point2 &#x3D; const Point2(1, 2);\nPoint2 p3 &#x3D; const Point2(1, 2);\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h4 id=\"工厂构造函数\"><a href=\"#工厂构造函数\" class=\"headerlink\" title=\"工厂构造函数\"></a>工厂构造函数</h4><ul>\n<li>通过命名构造函数，然后使用 <code>factory</code> 关键字</li>\n<li>如果对象存在，不生成新对象，如果不存在，生成新对象</li>\n</ul>\n<pre class=\"line-numbers language-Dart\" data-language=\"Dart\"><code class=\"language-Dart\">class Singleton &#123;\n  String name;\n  &#x2F;&#x2F;工厂构造函数无法访问this，所以这里要用static\n  static Singleton _cache; \n\n  &#x2F;&#x2F;定义一个命名构造函数用来生产实例\n  Singleton._newObject(this.name);\n  \n  &#x2F;&#x2F;工厂方法构造函数，关键字factory\n  factory Singleton([String name &#x3D; &#39;singleton&#39;]) &#x3D;&gt;\n      Singleton._cache ??&#x3D; Singleton._newObject(name);\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h4 id=\"Set-和-get-方法\"><a href=\"#Set-和-get-方法\" class=\"headerlink\" title=\"Set 和 get 方法\"></a>Set 和 get 方法</h4><ul>\n<li>通过 <code>set</code> 和 <code>get</code> 关键字来进行操作</li>\n</ul>\n<pre class=\"line-numbers language-dart\" data-language=\"dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Rectangle</span> <span class=\"token punctuation\">&#123;</span>\n  num left<span class=\"token punctuation\">;</span>\n  num top<span class=\"token punctuation\">;</span>\n  num width<span class=\"token punctuation\">;</span>\n  num height<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">Rectangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>top<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  num <span class=\"token keyword\">get</span> right <span class=\"token operator\">=</span><span class=\"token operator\">></span> left <span class=\"token operator\">+</span> width<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">set</span> <span class=\"token function\">right</span><span class=\"token punctuation\">(</span>num value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> left <span class=\"token operator\">=</span> value <span class=\"token operator\">-</span> width<span class=\"token punctuation\">;</span>\n  num <span class=\"token keyword\">get</span> bottom <span class=\"token operator\">=</span><span class=\"token operator\">></span> top <span class=\"token operator\">+</span> height<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">set</span> <span class=\"token function\">bottom</span><span class=\"token punctuation\">(</span>num value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> top <span class=\"token operator\">=</span> value <span class=\"token operator\">-</span> height<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","text":"Dart 类相关的使用命名构造函数 Point.fromJSON(Map json) class Point &#123; num x; num y; Point(this.x, this.y); &#x2F;&#x2F; 命名构造函数（命名构造函数） Point.fromJSO...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"Dart","slug":"Dart","count":4,"path":"api/tags/Dart.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Dart-%E7%B1%BB%E7%9B%B8%E5%85%B3%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">Dart 类相关的使用</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%91%BD%E5%90%8D%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">命名构造函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%87%8D%E5%AE%9A%E5%90%91%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">重定向构造函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%B6%85%E7%B1%BB%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">超类构造函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E9%87%8F%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">常量构造函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E5%8E%82%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">工厂构造函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Set-%E5%92%8C-get-%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">Set 和 get 方法</span></a></li></ol>","author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"抽象构造函数","uid":"6af98c5762fa00ab05498386038da6c3","slug":"abstractClass","date":"2021-06-01T02:16:37.000Z","updated":"2021-06-01T02:36:46.235Z","comments":true,"path":"api/articles/abstractClass.json","keywords":null,"cover":null,"text":"抽象类 abstract关键字修饰class 继承的方式使用 接口的方式使用 abstract class Message &#123; factory Message(String type) &#123; switch(type) &#123; case 'foot': re...","link":"","photos":[],"count_time":{"symbolsCount":825,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Dart","slug":"Dart","count":4,"path":"api/tags/Dart.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"DartException","uid":"1117fb54e92a8351488adf129028b2a6","slug":"DartException","date":"2021-05-31T09:06:01.000Z","updated":"2021-06-01T01:10:00.563Z","comments":true,"path":"api/articles/DartException.json","keywords":null,"cover":null,"text":"Dart 异常处理操作![截屏2021-05-31 下午5.06.39](DartException/截屏2021-05-31 下午5.06.39.png) 延迟加载异常 DeferredLoadException 延迟加载异常 throw new FormateExceptio...","link":"","photos":[],"count_time":{"symbolsCount":505,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Dart","slug":"Dart","count":4,"path":"api/tags/Dart.json"}],"author":{"name":"Aurora","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}