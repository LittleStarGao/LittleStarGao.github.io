{"title":"内存管理","uid":"5c41202f364c38ccdbd34c8ae458f2bb","slug":"内存管理","date":"2021-10-03T11:47:40.000Z","updated":"2021-10-03T11:57:17.487Z","comments":true,"path":"api/articles/内存管理.json","keywords":null,"cover":"https://images.xiaozhuanlan.com/photo/2019/0156fea8cc60760bdf6d2bd4229514d1.png","content":"<h3 id=\"内存布局\"><a href=\"#内存布局\" class=\"headerlink\" title=\"内存布局\"></a>内存布局</h3><p>栈(stack):方法调用，局部变量等，是连续的，高地址往低地址扩展</p>\n<p>堆(heap):通过alloc等分配的对象，是离散的，低地址往高地址扩展，需要我们手动控制</p>\n<p>未初始化数据(bss):未初始化的全局变量等</p>\n<p>已初始化数据(data):已初始化的全局变量等</p>\n<p>代码段(text):程序代码</p>\n<img src=\"/post/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/webp-20211003195350768\" class title=\"img\">\n\n","text":"内存布局栈(stack):方法调用，局部变量等，是连续的，高地址往低地址扩展 堆(heap):通过alloc等分配的对象，是离散的，低地址往高地址扩展，需要我们手动控制 未初始化数据(bss):未初始化的全局变量等 已初始化数据(data):已初始化的全局变量等 代码段(text...","link":"","photos":[],"count_time":{"symbolsCount":149,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"内存管理","slug":"内存管理","count":1,"path":"api/tags/内存管理.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%86%85%E5%AD%98%E5%B8%83%E5%B1%80\"><span class=\"toc-text\">内存布局</span></a></li></ol>","author":{"name":"LittleStart","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Mybatis环境搭建","uid":"84c46e71d38f152fbededa209add7e56","slug":"Mybatis环境搭建","date":"2021-10-30T11:49:03.000Z","updated":"2021-10-30T12:19:16.086Z","comments":true,"path":"api/articles/Mybatis环境搭建.json","keywords":null,"cover":[],"text":"MyBatis 环境搭建 mybatis 是一个优秀的基于 java 的持久层框架，它内部封装了 jdbc，使开发者只需要关注 sql 语句本身， 而不需要花费精力去处理加载驱动、创建连接、创建 statement 等繁杂的过程。mybatis 通过 xml 或注解的方式将要执行...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"mybatis","slug":"mybatis","count":1,"path":"api/tags/mybatis.json"}],"author":{"name":"LittleStart","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"UIView图像卡顿掉帧原因","uid":"1f36431921db0064bd4a7d93ff9bda02","slug":"UIView图像卡顿掉帧原因","date":"2021-10-03T11:08:04.000Z","updated":"2021-10-03T11:46:26.139Z","comments":true,"path":"api/articles/UIView图像卡顿掉帧原因.json","keywords":null,"cover":"https://images.xiaozhuanlan.com/photo/2019/0156fea8cc60760bdf6d2bd4229514d1.png","text":"UI卡顿掉帧原因 iOS设备的硬件时钟会发出Vsync（垂直同步信号），然后App的CPU会去计算屏幕要显示的内容，之后将计算好的内容提交到GPU去渲染。随后，GPU将渲染结果提交到帧缓冲区，等到下一个VSync到来时将缓冲区的帧显示到屏幕上。也就是说，一帧的显示是由CPU和GP...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"UIView","slug":"UIView","count":3,"path":"api/tags/UIView.json"}],"author":{"name":"LittleStart","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}