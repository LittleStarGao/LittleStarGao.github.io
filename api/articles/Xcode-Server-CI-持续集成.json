{"title":"Xcode Server CI 持续集成","uid":"d68e4e31d1e8b7032dd88c62b8f9b3ca","slug":"Xcode-Server-CI-持续集成","date":"2021-06-10T07:58:03.000Z","updated":"2021-10-02T01:12:09.339Z","comments":true,"path":"api/articles/Xcode-Server-CI-持续集成.json","keywords":null,"cover":"https://static01.imgkr.com/temp/05ea7cec66a3408a929eb7cfe95619cf.png","content":"<h2 id=\"Xcode-Server-CI-持续集成\"><a href=\"#Xcode-Server-CI-持续集成\" class=\"headerlink\" title=\"Xcode Server CI 持续集成\"></a>Xcode Server CI 持续集成</h2><h5 id=\"一、-Xcode-Server-基本概念\"><a href=\"#一、-Xcode-Server-基本概念\" class=\"headerlink\" title=\"一、 Xcode Server 基本概念\"></a>一、 Xcode Server 基本概念</h5><ul>\n<li><code>Xcode Server</code>是配置在<code>Mac</code>端的一个服务器，服务器上我们可以创建<code>Bot</code>自动执行机器人</li>\n<li>软件应用程序在本地<code>（Xcode development Macs）</code>开发过程中，会将代码不断合并到<code>git</code>上(SCM Repository)， </li>\n<li><code>Bot</code>会在指定的时间将git上的代码拉取到Server上，并且执行需要的操作，例如<code>pod install</code>以及创建<code>ipa</code>上传到测试分发平台</li>\n<li>执行完成之后会生成执行报告，如果有自动化测试的话，还会输出测试统计数据。</li>\n</ul>\n<h5 id=\"二、-如何使用-Xcode-Server-进行持续集成\"><a href=\"#二、-如何使用-Xcode-Server-进行持续集成\" class=\"headerlink\" title=\"二、 如何使用 Xcode Server 进行持续集成\"></a>二、 如何使用 Xcode Server 进行持续集成</h5><ul>\n<li>在Mac 电脑上, 安装 Xcode，并启用这个功能，一个持续集成的服务器就搭建好了</li>\n<li>启动Xcode，点击 Xcode 菜单: Xcode-&gt;XcodeServer</li>\n<li> 在<code>Server&amp;Bots</code>界面，将开关由<code>OFF</code>设置为<code>ON</code>, 输入系统账户密码, 选择一个用户作为<code> Xcode Server</code>用户，然后<code>continue</code>等待完成，即成功启用<code>Xcode Server。</code></li>\n</ul>\n<img src=\"/post/xcode-server.png\" alt=\"xcode-server\">\n\n\n\n<ul>\n<li>设置超时时间。超过时间后就会自动取消，如果项目仓库较大并且网速较慢第一次拉取会很耗时，可以先设置长一点时间。</li>\n</ul>\n<img src=\"/post/Xcode-Server-CI-%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/out_time_select-3315641.png\" class title=\"out_time_select\">\n\n<ul>\n<li><p>配置创建和查看bot权限的成员</p>\n<img src=\"/post/Xcode-Server-CI-%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/authority.png\" class title=\"authority\"></li>\n<li><p>配置邮件通知</p>\n<img src=\"/post/Xcode-Server-CI-%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/mail_project.png\" class title=\"mail_project\"></li>\n</ul>\n","text":"Xcode Server CI 持续集成一、 Xcode Server 基本概念 Xcode Server是配置在Mac端的一个服务器，服务器上我们可以创建Bot自动执行机器人 软件应用程序在本地（Xcode development Macs）开发过程中，会将代码不断合并到git...","link":"","photos":[],"count_time":{"symbolsCount":574,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"持续集成","slug":"持续集成","count":1,"path":"api/tags/持续集成.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Xcode-Server-CI-%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90\"><span class=\"toc-text\">Xcode Server CI 持续集成</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81-Xcode-Server-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">一、 Xcode Server 基本概念</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81-%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-Xcode-Server-%E8%BF%9B%E8%A1%8C%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90\"><span class=\"toc-text\">二、 如何使用 Xcode Server 进行持续集成</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"LittleStart","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"iOS 组件化拆分总结","uid":"08c633a5de2fe3edfdf41cfdec1b1bae","slug":"iOS-component","date":"2021-06-11T08:05:51.000Z","updated":"2021-10-02T01:12:49.846Z","comments":true,"path":"api/articles/iOS-component.json","keywords":null,"cover":"https://static01.imgkr.com/temp/05ea7cec66a3408a929eb7cfe95619cf.png","text":"组件化一、为何要组件化? 这是我们在做组件化的时候要思考的，它的优点和缺点是什么，这样我们对组件化有个基本认识 1. 组件化定义 组件是由一个或多个类构成，能完整描述一个业务场景，并能被其他业务场景复用的功能单位。 比如内存，硬盘，CPU，显示器等，拿出其中任何一个部件都能被其他...","link":"","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"18 mins."},"categories":[],"tags":[{"name":"组件化","slug":"组件化","count":1,"path":"api/tags/组件化.json"}],"author":{"name":"LittleStart","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"async 和 await 同步等待","uid":"549def405a2020c02b3886501c2d84f3","slug":"async-await","date":"2021-06-01T03:45:18.000Z","updated":"2021-10-02T01:13:12.765Z","comments":true,"path":"api/articles/async-await.json","keywords":null,"cover":"https://static01.imgkr.com/temp/05ea7cec66a3408a929eb7cfe95619cf.png","text":"Dart 获取相应数据操作 ","link":"","photos":[],"count_time":{"symbolsCount":22,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Dart","slug":"Dart","count":4,"path":"api/tags/Dart.json"}],"author":{"name":"LittleStart","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}