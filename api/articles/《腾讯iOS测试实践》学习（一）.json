{"title":"《腾讯iOS测试实践》学习（一）","uid":"72c9fa0d926f81572e4b5de9847c1152","slug":"《腾讯iOS测试实践》学习（一）","date":"2021-10-01T03:47:01.990Z","updated":"2021-10-01T05:26:27.351Z","comments":true,"path":"api/articles/《腾讯iOS测试实践》学习（一）.json","keywords":null,"cover":"https://imgtu.com/i/47SwcV","content":"<img src=\"/post/%E3%80%8A%E8%85%BE%E8%AE%AFiOS%E6%B5%8B%E8%AF%95%E5%AE%9E%E8%B7%B5%E3%80%8B%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/iOS_test_home_title.png\" class title=\"iOS_test_home_title\">\n\n<h4 id=\"工程效率\"><a href=\"#工程效率\" class=\"headerlink\" title=\"工程效率\"></a>工程效率</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p> 需求评审：需求评审机制以及更新通知，避免需求有改动而没有及时同步到相关角色。</p></blockquote>\n<ul>\n<li>代码质量：静态代码扫描，千行代码缺陷率等。</li>\n<li>架构评审：代码架构的讨论以及评审。</li>\n<li>Bug流程：Bug生命周期，避免随便修改Bug状态以及备注缺失。</li>\n<li>Code Review：代码评审，如果有代码评审委员会就更好了。</li>\n<li>Dogfood：自己做的产品自己（项目各成员）先体验。</li>\n<li>Showcase：完成某个特性，可以通过会议针对某个特性进行展示，一般由产品经理主持。</li>\n</ul>\n<h4 id=\"测试工程师最主要的工作内容\"><a href=\"#测试工程师最主要的工作内容\" class=\"headerlink\" title=\"测试工程师最主要的工作内容\"></a>测试工程师最主要的工作内容</h4><ol>\n<li><p>测试周期：</p>\n<ul>\n<li>测试与研发周期是密切关联的，包括迭代测试、集成测试、回归测试、上线测试等，每个阶段都要把握好测试效率和测试资源分配。</li>\n</ul>\n</li>\n<li><p>测试设计：</p>\n<ul>\n<li>包括需求覆盖度、用例覆盖度、用例执行效率等。</li>\n</ul>\n</li>\n<li><p>自动化测试：</p>\n<ul>\n<li>使用自动化执行的方式进行测试，可以快速得出测试结果，节省人力成本。</li>\n</ul>\n</li>\n<li><p>静态代码分析：</p>\n<ul>\n<li>使用一定的工具来对代码进行静态扫描，提前发现代码隐藏的问题。</li>\n</ul>\n</li>\n</ol>\n","feature":true,"text":" 工程效率 需求评审：需求评审机制以及更新通知，避免需求有改动而没有及时同步到相关角色。 代码质量：静态代码扫描，千行代码缺陷率等。 架构评审：代码架构的讨论以及评审。 Bug流程：Bug生命周期，避免随便修改Bug状态以及备注缺失。 Code Review：代码评审，如果有代码...","link":"","photos":[],"count_time":{"symbolsCount":436,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"iOS测试","slug":"iOS测试","count":1,"path":"api/tags/iOS测试.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E7%A8%8B%E6%95%88%E7%8E%87\"><span class=\"toc-text\">工程效率</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%80%E4%B8%BB%E8%A6%81%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">测试工程师最主要的工作内容</span></a></li></ol>","author":{"name":"LittleStart","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"iOS设计模式（一）","uid":"69226c43fa619d7df7756bf099da8b7a","slug":"iOS设计模式（一）","date":"2021-09-30T12:30:53.000Z","updated":"2021-10-01T01:00:07.655Z","comments":true,"path":"api/articles/iOS设计模式（一）.json","keywords":null,"cover":[],"text":"类继承和对象组合 类继承简单直接、硬卧关系在编译静态定义 被复用的实现易于修改 缺点： 因为类继承在编译时定义、所以无法在运行时进行变更从父类继承来的实现 子类描述在父类、 子类直接面对父类的封装、因此破坏了封装 父类实现的任何变更都会强制爱子类到的变更 因为在新的问题场景下京城...","link":"","photos":[],"count_time":{"symbolsCount":471,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"LittleStart","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}