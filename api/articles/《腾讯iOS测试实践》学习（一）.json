{"title":"《腾讯iOS测试实践》学习（一）","uid":"72c9fa0d926f81572e4b5de9847c1152","slug":"《腾讯iOS测试实践》学习（一）","date":"2021-05-22T07:06:49.000Z","updated":"2021-10-01T09:40:20.073Z","comments":true,"path":"api/articles/《腾讯iOS测试实践》学习（一）.json","keywords":null,"cover":[],"content":"<img src=\"/post/%E3%80%8A%E8%85%BE%E8%AE%AFiOS%E6%B5%8B%E8%AF%95%E5%AE%9E%E8%B7%B5%E3%80%8B%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/test-one-tentent.png\" class title=\"test-one-tentent\">\n\n<h4 id=\"工程效率\"><a href=\"#工程效率\" class=\"headerlink\" title=\"工程效率\"></a>工程效率</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p> 需求评审：需求评审机制以及更新通知，避免需求有改动而没有及时同步到相关角色。</p></blockquote>\n<ul>\n<li>代码质量：静态代码扫描，千行代码缺陷率等。</li>\n<li>架构评审：代码架构的讨论以及评审。</li>\n<li>Bug流程：Bug生命周期，避免随便修改Bug状态以及备注缺失。</li>\n<li>Code Review：代码评审，如果有代码评审委员会就更好了。</li>\n<li>Dogfood：自己做的产品自己（项目各成员）先体验。</li>\n<li>Showcase：完成某个特性，可以通过会议针对某个特性进行展示，一般由产品经理主持。</li>\n</ul>\n<h4 id=\"测试工程师最主要的工作内容\"><a href=\"#测试工程师最主要的工作内容\" class=\"headerlink\" title=\"测试工程师最主要的工作内容\"></a>测试工程师最主要的工作内容</h4><ol>\n<li><p>测试周期：</p>\n<ul>\n<li>测试与研发周期是密切关联的，包括迭代测试、集成测试、回归测试、上线测试等，每个阶段都要把握好测试效率和测试资源分配。</li>\n</ul>\n</li>\n<li><p>测试设计：</p>\n<ul>\n<li>包括需求覆盖度、用例覆盖度、用例执行效率等。</li>\n</ul>\n</li>\n<li><p>自动化测试：</p>\n<ul>\n<li>使用自动化执行的方式进行测试，可以快速得出测试结果，节省人力成本。</li>\n</ul>\n</li>\n<li><p>静态代码分析：</p>\n<ul>\n<li>使用一定的工具来对代码进行静态扫描，提前发现代码隐藏的问题。</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"自动化测试\"><a href=\"#自动化测试\" class=\"headerlink\" title=\"自动化测试\"></a>自动化测试</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>业界自动化测试金字塔模型建议做单元测试或者接口测试多于UI自动化测试</p></blockquote>\n<h5 id=\"主流自动化测试类型\"><a href=\"#主流自动化测试类型\" class=\"headerlink\" title=\"主流自动化测试类型\"></a>主流自动化测试类型</h5><p><strong>1．BVT（Build Verification Test）业界现在流行持续交付的模式。</strong></p>\n<ul>\n<li>那么每次持续集成编译出包后，自动化会运行一些基础功能测试用例，保证版本基础功能可用，而不会因为新代码合入影响基础功能。</li>\n</ul>\n<p><strong>2．监控类</strong></p>\n<ul>\n<li>我们会对产品进行一些监控，例如手机QQ浏览器（iPhone）项目实现了三种类型的监控测试，即终端视频嗅探监控、终端feeds流短视频可播性监控、终端资讯类监控。这部分监控的基础框架和BVT实现是一致的，只是基于业务形态做了调整，采用的也是<code>EarlGrey</code>框架并进行了二次开发</li>\n</ul>\n<p><strong>3．性能自动化测试</strong></p>\n<ul>\n<li>性能测试涉及各种数据的采集和分析，而数据采集往往很复杂并且非常耗时，性能自动化测试也都集中在数据采集这一块。目前我们针对页面速度、<code>产品稳定性、电量、流量、内存等各个方面进行性能自动化测试的尝试</code></li>\n</ul>\n<h4 id=\"静态代码分析\"><a href=\"#静态代码分析\" class=\"headerlink\" title=\"静态代码分析\"></a>静态代码分析</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>静态代码分析就是在不执行代码的情况下，通过一定的算法规则（词法分析、语法分析、单函数分析、代码段分析、数据流分析、资源分析、依赖链分析、更高级的智能逻辑分析）对整个工程的代码进行分析，以此来找出代码中的缺陷。这样就可以提早发现问题，大大降低研发成本</p></blockquote>\n<h4 id=\"如果能够在Coding阶段发现大部分缺陷，就能大大降低修复缺陷的成本\"><a href=\"#如果能够在Coding阶段发现大部分缺陷，就能大大降低修复缺陷的成本\" class=\"headerlink\" title=\"如果能够在Coding阶段发现大部分缺陷，就能大大降低修复缺陷的成本\"></a>如果能够在Coding阶段发现大部分缺陷，就能大大降低修复缺陷的成本</h4><p><strong>iOS平台比较好用两款工具</strong></p>\n<ul>\n<li>Clang的Scan-Build工具（下载地址：<a href=\"http://clang-analyzer.llvm.org/scan-build.html%EF%BC%89\">http://clang-analyzer.llvm.org/scan-build.html）</a></li>\n<li>FaceBook的Infer工具（下载地址：<a href=\"https://github.com/facebook/infer%EF%BC%89\">https://github.com/facebook/infer）</a></li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>QQ浏览器（iPhone）项目采用Scan-Build工具发现代码缺陷</p></blockquote>\n<h3 id=\"品质管理\"><a href=\"#品质管理\" class=\"headerlink\" title=\"品质管理\"></a>品质管理</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>品质管理分为两大类，即<code>研发品质</code>和<code>线上品质。</code></p></blockquote>\n<p>​    <strong>一、研发品质</strong></p>\n<pre><code>    - 品质体系（性能指标 + 用户评测）、测试过程数据（Bug、通过率）\n</code></pre>\n<p>​    <strong>二、线上品质</strong></p>\n<ul>\n<li><p>线上数据、用户反馈、漏测率</p>\n</li>\n<li><p>品质体系、除了产品特性、还包含流畅度、内存、耗电量、启动速度、弱网、要考虑各个指标的比重、从而更好优化<code>核心指标</code></p>\n</li>\n<li><p>通过预设埋点上报、以及通过用户反馈、对反馈进行分析</p>\n</li>\n<li><p><strong>代码质量：</strong> <code>代码扫描</code>、<code>架构评审</code>、<code>代码规范</code>、<code>分支覆盖</code></p>\n</li>\n<li><p><strong>代码覆盖率：</strong> 指行覆盖、类覆盖、条件覆盖、分支覆盖</p>\n</li>\n<li><p><strong>测试过程数据：</strong> 测试通过率、回归通过率</p>\n</li>\n<li><p><strong>性能指标：</strong> 指启动时间、响应时间、内存、流畅度、CPU、耗电量。</p>\n</li>\n<li><p><strong>用户评测：</strong> 指产品进行用户调研、用户体验、用户问卷调查</p>\n</li>\n<li><p><strong>线上数据：</strong> 只上线后的产品数据、启动时间、用户行为数据</p>\n</li>\n<li><p><strong>Bug：</strong>指Bug模块分类（FT分布）、Bug各研发阶段数据、Bug分析。</p>\n</li>\n</ul>\n<h4 id=\"例：-下面是腾讯的质量测试\"><a href=\"#例：-下面是腾讯的质量测试\" class=\"headerlink\" title=\"例： 下面是腾讯的质量测试\"></a>例： 下面是腾讯的质量测试</h4><img src=\"/post/%E3%80%8A%E8%85%BE%E8%AE%AFiOS%E6%B5%8B%E8%AF%95%E5%AE%9E%E8%B7%B5%E3%80%8B%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/q_quity.png\" class title=\"q_quity\">\n\n<p><strong>开发质量工作：</strong>涉及架构评审、代码规范、代码评审、单元测试、开发自测等。</p>\n<p><strong>测试质量工作：</strong>需求评审、用例设计（利用测试建模、测试分析等方法来提升测试设计覆盖度）、自动化测试（BVT或者接口测试等）、性能测试、精准测试、探索式测试、基于风险测试（RBT）、Bug大扫除、Bug分析、Bug统计、众测等。测试质量工作涉及的内容很多，可以考虑再抽练几个分类</p>\n<img src=\"/post/%E3%80%8A%E8%85%BE%E8%AE%AFiOS%E6%B5%8B%E8%AF%95%E5%AE%9E%E8%B7%B5%E3%80%8B%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/qa_test_kf.png\" class title=\"qa_test_kf\">\n\n\n\n\n\n\n\n\n\n\n\n<img src=\"/post/%E3%80%8A%E8%85%BE%E8%AE%AFiOS%E6%B5%8B%E8%AF%95%E5%AE%9E%E8%B7%B5%E3%80%8B%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89/my_hert_will_go_on.png\" class title=\"my_hert_will_go_on\">\n","text":" 工程效率 需求评审：需求评审机制以及更新通知，避免需求有改动而没有及时同步到相关角色。 代码质量：静态代码扫描，千行代码缺陷率等。 架构评审：代码架构的讨论以及评审。 Bug流程：Bug生命周期，避免随便修改Bug状态以及备注缺失。 Code Review：代码评审，如果有代码...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"测试","slug":"测试","count":1,"path":"api/tags/测试.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E7%A8%8B%E6%95%88%E7%8E%87\"><span class=\"toc-text\">工程效率</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%9C%80%E4%B8%BB%E8%A6%81%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">测试工程师最主要的工作内容</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">自动化测试</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E6%B5%81%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">主流自动化测试类型</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%9D%99%E6%80%81%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90\"><span class=\"toc-text\">静态代码分析</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A6%82%E6%9E%9C%E8%83%BD%E5%A4%9F%E5%9C%A8Coding%E9%98%B6%E6%AE%B5%E5%8F%91%E7%8E%B0%E5%A4%A7%E9%83%A8%E5%88%86%E7%BC%BA%E9%99%B7%EF%BC%8C%E5%B0%B1%E8%83%BD%E5%A4%A7%E5%A4%A7%E9%99%8D%E4%BD%8E%E4%BF%AE%E5%A4%8D%E7%BC%BA%E9%99%B7%E7%9A%84%E6%88%90%E6%9C%AC\"><span class=\"toc-text\">如果能够在Coding阶段发现大部分缺陷，就能大大降低修复缺陷的成本</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%93%81%E8%B4%A8%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">品质管理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BE%8B%EF%BC%9A-%E4%B8%8B%E9%9D%A2%E6%98%AF%E8%85%BE%E8%AE%AF%E7%9A%84%E8%B4%A8%E9%87%8F%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">例： 下面是腾讯的质量测试</span></a></li></ol>","author":{"name":"LittleStart","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"应用性能分析方法","uid":"5c608ba3383f27b31f8830b3a9b5f6d6","slug":"应用性能分析方法","date":"2021-05-22T07:06:49.000Z","updated":"2021-05-22T07:08:32.663Z","comments":true,"path":"api/articles/应用性能分析方法.json","keywords":null,"cover":null,"text":"应用性能分析方法1. 采样顾名思义，采样(或基于探测点的性能分析)是指以一定的周期间隔采集状态，这通常需要借助工具。由于不会干扰应用的执行，因此采样可以很好地提供应用的全景图。采样的不足之处在于它不能返回 100% 精确的细节。如果采样的频率是 10 毫秒，那么你就无法得知在探测...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"iOS性能优化","slug":"iOS性能优化","count":2,"path":"api/tags/iOS性能优化.json"}],"author":{"name":"LittleStart","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"block基本结构（一）","uid":"837320c05a767825bb487e2f2edb4766","slug":"Block底层实现原理","date":"2021-05-22T07:06:49.000Z","updated":"2021-10-01T12:16:04.684Z","comments":true,"path":"api/articles/Block底层实现原理.json","keywords":null,"cover":"https://static01.imgkr.com/temp/623564c792a84bd587a73355356d11f6.png","text":"block基本结构 block 实际是一个对象、主要是有一个 isa、一个 impl和一个descriptor 组成 在开启ARC时候、block 应该是 _NSConcreteGlobalBlock 类 impl 是实际的指针函数、本例中，它指向 _main_block_fun...","link":"","photos":[],"count_time":{"symbolsCount":848,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"block","slug":"block","count":1,"path":"api/tags/block.json"}],"author":{"name":"LittleStart","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}